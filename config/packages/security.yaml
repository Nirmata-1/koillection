security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    role_hierarchy:
        ROLE_ADMIN: ROLE_USER

    providers:
        app_provider:
            entity:
                class: App\Entity\User
                property: username

    firewalls:
        dev:
            pattern: ^/_(profiler|wdt|error)
            security: false
        api:
            pattern: ^/api
            lazy: true
            provider: app_provider
            json_login:
                check_path: /api/authentication_token
                username_path: username
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            jwt: ~
        main:
            pattern: ^/
            remember_me:
                secret: '%env(string:APP_SECRET)%'
                lifetime: 2628000 # 1 month
                secure: auto
            logout:
                path: app_security_logout
            custom_authenticators:
                - App\Security\UsernameOrEmailPasswordAuthenticator

    access_control:
        - { path: ^/user, role: PUBLIC_ACCESS }
        - { path: ^/login, role: PUBLIC_ACCESS }
        - { path: ^/first-connection, role: PUBLIC_ACCESS }
        - { path: ^/translations, role: PUBLIC_ACCESS }
        - { path: (?:^/api$)|(?:^/api/docs)|(?:^/api/index.(html|json|jsonld)$), roles: PUBLIC_ACCESS }
        - { path: ^/api/authentication_token, roles: PUBLIC_ACCESS }
        - { path: ^/api/metrics, roles: PUBLIC_ACCESS }
        - { path: ^/$, role: PUBLIC_ACCESS }
        - { path: ^/, role: ROLE_USER }


when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon